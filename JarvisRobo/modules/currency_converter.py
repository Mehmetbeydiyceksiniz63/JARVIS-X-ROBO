iÃ§e aktarma istekleri
telegramdan iÃ§e aktarma ParseMode, GÃ¼ncelleme
telegram.ext'ten iÃ§e aktarma CallbackContext, CommandHandler

JarvisRobo'dan iÃ§e aktar CASH_API_KEY, daÄŸÄ±tÄ±cÄ±


def dÃ¶nÃ¼ÅŸtÃ¼rme(gÃ¼ncelleme: GÃ¼ncelleme, baÄŸlam: CallbackContext):
args = update.active_message.text.split(" ")

if len(args) == 4:
deneyin:
orig_cur_amount = float(args[1])

hariÃ§ ValueError:
update.active_message.reply_text("GeÃ§ersiz Para Birimi TutarÄ±")
return

orig_cur = args[2].upper()

new_cur = args[3].upper()

request_url = (
f"https://www.alphavantage.co/query"
f"?function=CURRENCY_EXCHANGE_RATE"
f"&from_currency={orig_cur}"
f"&to_currency={new_cur }"
f"&apikey={CASH_API_KEY}"
)
yanÄ±t = request.get(request_url).json()
try:
current_rate = float(
Response["GerÃ§ek ZamanlÄ± DÃ¶viz DeÄŸiÅŸimi) Rate"]["5. DÃ¶viz Kuru"]
)
hariÃ§ KeyError:
update.active_message.reply_text("Para Birimi Desteklenmiyor.")
return
new_cur_amount = round(orig_cur_amount * current_rate, 5)
update.active_message.reply_text(
f"{orig_cur_amount} {orig_cur} = {new_cur_amount} {new_cur}"
)

elif len(args) == 1:
update.active_message.reply_text(__help__ , parse_mode=ParseMode.MARKDOWN)

else:
update.active_message.reply_text(
f"*GeÃ§ersiz Args!!:* Gerekli 3 Ancak GeÃ§ildi {len(args) 1}",
parse_mode=ParseMode .MARKDOWN,
)


__help__ = """
ParayÄ± bir borsadan diÄŸerine dÃ¶nÃ¼ÅŸtÃ¼rÃ¼r

KullanÄ±m: /cash tutarÄ± -den
Ã–rnek: /cash 2 USD INR
"" "

CONVERTER_HANDLER = CommandHandler("nakit", dÃ¶nÃ¼ÅŸtÃ¼rme, run_async=True)
dispatcher.add_handler(CONVERTER_HANDLER)
__command_list__ = ["nakit"]

__handlers__ = [CONVERTER_HANDLER]

__mod_name__ = "ğŸ”±nakitğŸ”±"